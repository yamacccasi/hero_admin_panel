{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { useHttp } from \"../../hooks/http.hook\";\nconst heroesAdapter = createEntityAdapter();\n\n// const initialState = {\n//     heroes: [],\n//     heroesLoadingStatus: 'idle',\n// }\n\nconst initialState = heroesAdapter.getInitialState({\n  heroesLoadingStatus: 'idle'\n});\nexport const fetchHeroes = _s(createAsyncThunk('heroes/fetchHeroes', _s(async () => {\n  _s();\n  const {\n    request\n  } = useHttp();\n  return await request('http://localhost:3001/heroes');\n}, \"Cd6rTTFIaDkCOxqWEjU2WwhZI/U=\", false, function () {\n  return [useHttp];\n})), \"Cd6rTTFIaDkCOxqWEjU2WwhZI/U=\", false, function () {\n  return [useHttp];\n});\nconst heroesSlice = createSlice({\n  name: 'heroes',\n  initialState,\n  reducers: {\n    heroCreated: (state, action) => {\n      state.heroes.push(action.payload);\n    },\n    heroDeleted: (state, action) => {\n      state.heroes = state.heroes.filter(item => item.id !== action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchHeroes.pending, state => {\n      state.heroesLoadingStatus = 'loading';\n    }).addCase(fetchHeroes.fulfilled, (state, action) => {\n      state.heroesLoadingStatus = 'idle';\n      state.heroes = action.payload;\n      heroesAdapter;\n    }).addCase(fetchHeroes.rejected, state => {\n      state.heroesLoadingStatus = 'error';\n    }).addDefaultCase(() => {});\n  }\n});\nconst {\n  actions,\n  reducer\n} = heroesSlice;\nexport default reducer;\nexport const {\n  heroCreated,\n  heroDeleted,\n  heroesFetched,\n  heroesFetching,\n  heroesFetchingError\n} = actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","createEntityAdapter","useHttp","heroesAdapter","initialState","getInitialState","heroesLoadingStatus","fetchHeroes","_s","request","heroesSlice","name","reducers","heroCreated","state","action","heroes","push","payload","heroDeleted","filter","item","id","extraReducers","builder","addCase","pending","fulfilled","rejected","addDefaultCase","actions","reducer","heroesFetched","heroesFetching","heroesFetchingError"],"sources":["/Users/maxympetlyak/Desktop/REDUX/hero_admin_panel_template/src/components/heroesList/heroesSlice.js"],"sourcesContent":["import { createSlice,createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport {useHttp} from \"../../hooks/http.hook\";\n\n\nconst heroesAdapter = createEntityAdapter()\n\n// const initialState = {\n//     heroes: [],\n//     heroesLoadingStatus: 'idle',\n// }\n\nconst initialState = heroesAdapter.getInitialState({\n    heroesLoadingStatus : 'idle'\n\n});\n\nexport const fetchHeroes = createAsyncThunk(\n    'heroes/fetchHeroes',\n    async () => {\n        const {request} = useHttp();\n            return await request('http://localhost:3001/heroes')\n    }\n)\n\nconst heroesSlice = createSlice({\n        name: 'heroes',\n        initialState,\n        reducers: {\n            heroCreated: (state, action) => {\n                state.heroes.push(action.payload);\n            },\n            heroDeleted: (state, action) => {\n                state.heroes = state.heroes.filter(item => item.id !== action.payload);\n            }\n        },\n    extraReducers: (builder) => {\n            builder\n                .addCase(fetchHeroes.pending,state => {state.heroesLoadingStatus = 'loading'})\n                .addCase(fetchHeroes.fulfilled, (state,action) => {\n                    state.heroesLoadingStatus = 'idle'\n                    state.heroes = action.payload\n                    heroesAdapter\n                })\n                .addCase(fetchHeroes.rejected, state => {\n                    state.heroesLoadingStatus = 'error'\n                })\n                .addDefaultCase(() => {})\n\n    }\n    }\n);\n\nconst {actions,reducer} = heroesSlice;\n\nexport default reducer;\nexport const {\n    heroCreated,\n    heroDeleted,\n    heroesFetched,\n    heroesFetching,\n    heroesFetchingError\n} = actions"],"mappings":";AAAA,SAASA,WAAW,EAACC,gBAAgB,EAAEC,mBAAmB,QAAQ,kBAAkB;AACpF,SAAQC,OAAO,QAAO,uBAAuB;AAG7C,MAAMC,aAAa,GAAGF,mBAAmB,CAAC,CAAC;;AAE3C;AACA;AACA;AACA;;AAEA,MAAMG,YAAY,GAAGD,aAAa,CAACE,eAAe,CAAC;EAC/CC,mBAAmB,EAAG;AAE1B,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAAC,EAAA,CAAGR,gBAAgB,CACvC,oBAAoB,EAAAQ,EAAA,CACpB,YAAY;EAAAA,EAAA;EACR,MAAM;IAACC;EAAO,CAAC,GAAGP,OAAO,CAAC,CAAC;EACvB,OAAO,MAAMO,OAAO,CAAC,8BAA8B,CAAC;AAC5D,CAAC;EAAA,QAFqBP,OAAO;AAAA,EAGjC,CAAC;EAAA,QAHyBA,OAAO;AAAA,EAGhC;AAED,MAAMQ,WAAW,GAAGX,WAAW,CAAC;EACxBY,IAAI,EAAE,QAAQ;EACdP,YAAY;EACZQ,QAAQ,EAAE;IACNC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACE,MAAM,CAACC,IAAI,CAACF,MAAM,CAACG,OAAO,CAAC;IACrC,CAAC;IACDC,WAAW,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACE,MAAM,GAAGF,KAAK,CAACE,MAAM,CAACI,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAACG,OAAO,CAAC;IAC1E;EACJ,CAAC;EACLK,aAAa,EAAGC,OAAO,IAAK;IACpBA,OAAO,CACFC,OAAO,CAAClB,WAAW,CAACmB,OAAO,EAACZ,KAAK,IAAI;MAACA,KAAK,CAACR,mBAAmB,GAAG,SAAS;IAAA,CAAC,CAAC,CAC7EmB,OAAO,CAAClB,WAAW,CAACoB,SAAS,EAAE,CAACb,KAAK,EAACC,MAAM,KAAK;MAC9CD,KAAK,CAACR,mBAAmB,GAAG,MAAM;MAClCQ,KAAK,CAACE,MAAM,GAAGD,MAAM,CAACG,OAAO;MAC7Bf,aAAa;IACjB,CAAC,CAAC,CACDsB,OAAO,CAAClB,WAAW,CAACqB,QAAQ,EAAEd,KAAK,IAAI;MACpCA,KAAK,CAACR,mBAAmB,GAAG,OAAO;IACvC,CAAC,CAAC,CACDuB,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;EAErC;AACA,CACJ,CAAC;AAED,MAAM;EAACC,OAAO;EAACC;AAAO,CAAC,GAAGrB,WAAW;AAErC,eAAeqB,OAAO;AACtB,OAAO,MAAM;EACTlB,WAAW;EACXM,WAAW;EACXa,aAAa;EACbC,cAAc;EACdC;AACJ,CAAC,GAAGJ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}