{"ast":null,"code":"/*!\n * morgan\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\nmodule.exports = morgan;\nmodule.exports.compile = compile;\nmodule.exports.format = format;\nmodule.exports.token = token;\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar auth = require('basic-auth');\nvar debug = require('debug')('morgan');\nvar deprecate = require('depd')('morgan');\nvar onFinished = require('on-finished');\nvar onHeaders = require('on-headers');\n\n/**\n * Array of CLF month names.\n * @private\n */\n\nvar CLF_MONTH = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n/**\n * Default log buffer duration.\n * @private\n */\n\nvar DEFAULT_BUFFER_DURATION = 1000;\n\n/**\n * Create a logger middleware.\n *\n * @public\n * @param {String|Function} format\n * @param {Object} [options]\n * @return {Function} middleware\n */\n\nfunction morgan(format, options) {\n  var fmt = format;\n  var opts = options || {};\n  if (format && typeof format === 'object') {\n    opts = format;\n    fmt = opts.format || 'default';\n\n    // smart deprecation message\n    deprecate('morgan(options): use morgan(' + (typeof fmt === 'string' ? JSON.stringify(fmt) : 'format') + ', options) instead');\n  }\n  if (fmt === undefined) {\n    deprecate('undefined format: specify a format');\n  }\n\n  // output on request instead of response\n  var immediate = opts.immediate;\n\n  // check if log entry should be skipped\n  var skip = opts.skip || false;\n\n  // format function\n  var formatLine = typeof fmt !== 'function' ? getFormatFunction(fmt) : fmt;\n\n  // stream\n  var buffer = opts.buffer;\n  var stream = opts.stream || process.stdout;\n\n  // buffering support\n  if (buffer) {\n    deprecate('buffer option');\n\n    // flush interval\n    var interval = typeof buffer !== 'number' ? DEFAULT_BUFFER_DURATION : buffer;\n\n    // swap the stream\n    stream = createBufferStream(stream, interval);\n  }\n  return function logger(req, res, next) {\n    // request data\n    req._startAt = undefined;\n    req._startTime = undefined;\n    req._remoteAddress = getip(req);\n\n    // response data\n    res._startAt = undefined;\n    res._startTime = undefined;\n\n    // record request start\n    recordStartTime.call(req);\n    function logRequest() {\n      if (skip !== false && skip(req, res)) {\n        debug('skip request');\n        return;\n      }\n      var line = formatLine(morgan, req, res);\n      if (line == null) {\n        debug('skip line');\n        return;\n      }\n      debug('log request');\n      stream.write(line + '\\n');\n    }\n    ;\n    if (immediate) {\n      // immediate log\n      logRequest();\n    } else {\n      // record response start\n      onHeaders(res, recordStartTime);\n\n      // log when response finished\n      onFinished(res, logRequest);\n    }\n    next();\n  };\n}\n\n/**\n * Apache combined log format.\n */\n\nmorgan.format('combined', ':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"');\n\n/**\n * Apache common log format.\n */\n\nmorgan.format('common', ':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length]');\n\n/**\n * Default format.\n */\n\nmorgan.format('default', ':remote-addr - :remote-user [:date] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"');\ndeprecate.property(morgan, 'default', 'default format: use combined format');\n\n/**\n * Short format.\n */\n\nmorgan.format('short', ':remote-addr :remote-user :method :url HTTP/:http-version :status :res[content-length] - :response-time ms');\n\n/**\n * Tiny format.\n */\n\nmorgan.format('tiny', ':method :url :status :res[content-length] - :response-time ms');\n\n/**\n * dev (colored)\n */\n\nmorgan.format('dev', function developmentFormatLine(tokens, req, res) {\n  // get the status code if response written\n  var status = headersSent(res) ? res.statusCode : undefined;\n\n  // get status color\n  var color = status >= 500 ? 31 // red\n  : status >= 400 ? 33 // yellow\n  : status >= 300 ? 36 // cyan\n  : status >= 200 ? 32 // green\n  : 0; // no color\n\n  // get colored function\n  var fn = developmentFormatLine[color];\n  if (!fn) {\n    // compile\n    fn = developmentFormatLine[color] = compile('\\x1b[0m:method :url \\x1b[' + color + 'm:status\\x1b[0m :response-time ms - :res[content-length]\\x1b[0m');\n  }\n  return fn(tokens, req, res);\n});\n\n/**\n * request url\n */\n\nmorgan.token('url', function getUrlToken(req) {\n  return req.originalUrl || req.url;\n});\n\n/**\n * request method\n */\n\nmorgan.token('method', function getMethodToken(req) {\n  return req.method;\n});\n\n/**\n * response time in milliseconds\n */\n\nmorgan.token('response-time', function getResponseTimeToken(req, res, digits) {\n  if (!req._startAt || !res._startAt) {\n    // missing request and/or response start time\n    return;\n  }\n\n  // calculate diff\n  var ms = (res._startAt[0] - req._startAt[0]) * 1e3 + (res._startAt[1] - req._startAt[1]) * 1e-6;\n\n  // return truncated value\n  return ms.toFixed(digits === undefined ? 3 : digits);\n});\n\n/**\n * total time in milliseconds\n */\n\nmorgan.token('total-time', function getTotalTimeToken(req, res, digits) {\n  if (!req._startAt || !res._startAt) {\n    // missing request and/or response start time\n    return;\n  }\n\n  // time elapsed from request start\n  var elapsed = process.hrtime(req._startAt);\n\n  // cover to milliseconds\n  var ms = elapsed[0] * 1e3 + elapsed[1] * 1e-6;\n\n  // return truncated value\n  return ms.toFixed(digits === undefined ? 3 : digits);\n});\n\n/**\n * current date\n */\n\nmorgan.token('date', function getDateToken(req, res, format) {\n  var date = new Date();\n  switch (format || 'web') {\n    case 'clf':\n      return clfdate(date);\n    case 'iso':\n      return date.toISOString();\n    case 'web':\n      return date.toUTCString();\n  }\n});\n\n/**\n * response status code\n */\n\nmorgan.token('status', function getStatusToken(req, res) {\n  return headersSent(res) ? String(res.statusCode) : undefined;\n});\n\n/**\n * normalized referrer\n */\n\nmorgan.token('referrer', function getReferrerToken(req) {\n  return req.headers.referer || req.headers.referrer;\n});\n\n/**\n * remote address\n */\n\nmorgan.token('remote-addr', getip);\n\n/**\n * remote user\n */\n\nmorgan.token('remote-user', function getRemoteUserToken(req) {\n  // parse basic credentials\n  var credentials = auth(req);\n\n  // return username\n  return credentials ? credentials.name : undefined;\n});\n\n/**\n * HTTP version\n */\n\nmorgan.token('http-version', function getHttpVersionToken(req) {\n  return req.httpVersionMajor + '.' + req.httpVersionMinor;\n});\n\n/**\n * UA string\n */\n\nmorgan.token('user-agent', function getUserAgentToken(req) {\n  return req.headers['user-agent'];\n});\n\n/**\n * request header\n */\n\nmorgan.token('req', function getRequestToken(req, res, field) {\n  // get header\n  var header = req.headers[field.toLowerCase()];\n  return Array.isArray(header) ? header.join(', ') : header;\n});\n\n/**\n * response header\n */\n\nmorgan.token('res', function getResponseHeader(req, res, field) {\n  if (!headersSent(res)) {\n    return undefined;\n  }\n\n  // get header\n  var header = res.getHeader(field);\n  return Array.isArray(header) ? header.join(', ') : header;\n});\n\n/**\n * Format a Date in the common log format.\n *\n * @private\n * @param {Date} dateTime\n * @return {string}\n */\n\nfunction clfdate(dateTime) {\n  var date = dateTime.getUTCDate();\n  var hour = dateTime.getUTCHours();\n  var mins = dateTime.getUTCMinutes();\n  var secs = dateTime.getUTCSeconds();\n  var year = dateTime.getUTCFullYear();\n  var month = CLF_MONTH[dateTime.getUTCMonth()];\n  return pad2(date) + '/' + month + '/' + year + ':' + pad2(hour) + ':' + pad2(mins) + ':' + pad2(secs) + ' +0000';\n}\n\n/**\n * Compile a format string into a function.\n *\n * @param {string} format\n * @return {function}\n * @public\n */\n\nfunction compile(format) {\n  if (typeof format !== 'string') {\n    throw new TypeError('argument format must be a string');\n  }\n  var fmt = String(JSON.stringify(format));\n  var js = '  \"use strict\"\\n  return ' + fmt.replace(/:([-\\w]{2,})(?:\\[([^\\]]+)\\])?/g, function (_, name, arg) {\n    var tokenArguments = 'req, res';\n    var tokenFunction = 'tokens[' + String(JSON.stringify(name)) + ']';\n    if (arg !== undefined) {\n      tokenArguments += ', ' + String(JSON.stringify(arg));\n    }\n    return '\" +\\n    (' + tokenFunction + '(' + tokenArguments + ') || \"-\") + \"';\n  });\n\n  // eslint-disable-next-line no-new-func\n  return new Function('tokens, req, res', js);\n}\n\n/**\n * Create a basic buffering stream.\n *\n * @param {object} stream\n * @param {number} interval\n * @public\n */\n\nfunction createBufferStream(stream, interval) {\n  var buf = [];\n  var timer = null;\n\n  // flush function\n  function flush() {\n    timer = null;\n    stream.write(buf.join(''));\n    buf.length = 0;\n  }\n\n  // write function\n  function write(str) {\n    if (timer === null) {\n      timer = setTimeout(flush, interval);\n    }\n    buf.push(str);\n  }\n\n  // return a minimal \"stream\"\n  return {\n    write: write\n  };\n}\n\n/**\n * Define a format with the given name.\n *\n * @param {string} name\n * @param {string|function} fmt\n * @public\n */\n\nfunction format(name, fmt) {\n  morgan[name] = fmt;\n  return this;\n}\n\n/**\n * Lookup and compile a named format function.\n *\n * @param {string} name\n * @return {function}\n * @public\n */\n\nfunction getFormatFunction(name) {\n  // lookup format\n  var fmt = morgan[name] || name || morgan.default;\n\n  // return compiled format\n  return typeof fmt !== 'function' ? compile(fmt) : fmt;\n}\n\n/**\n * Get request IP address.\n *\n * @private\n * @param {IncomingMessage} req\n * @return {string}\n */\n\nfunction getip(req) {\n  return req.ip || req._remoteAddress || req.connection && req.connection.remoteAddress || undefined;\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent(res) {\n  // istanbul ignore next: node.js 0.8 support\n  return typeof res.headersSent !== 'boolean' ? Boolean(res._header) : res.headersSent;\n}\n\n/**\n * Pad number to two digits.\n *\n * @private\n * @param {number} num\n * @return {string}\n */\n\nfunction pad2(num) {\n  var str = String(num);\n\n  // istanbul ignore next: num is current datetime\n  return (str.length === 1 ? '0' : '') + str;\n}\n\n/**\n * Record the start time.\n * @private\n */\n\nfunction recordStartTime() {\n  this._startAt = process.hrtime();\n  this._startTime = new Date();\n}\n\n/**\n * Define a token function with the given name,\n * and callback fn(req, res).\n *\n * @param {string} name\n * @param {function} fn\n * @public\n */\n\nfunction token(name, fn) {\n  morgan[name] = fn;\n  return this;\n}","map":{"version":3,"names":["module","exports","morgan","compile","format","token","auth","require","debug","deprecate","onFinished","onHeaders","CLF_MONTH","DEFAULT_BUFFER_DURATION","options","fmt","opts","JSON","stringify","undefined","immediate","skip","formatLine","getFormatFunction","buffer","stream","process","stdout","interval","createBufferStream","logger","req","res","next","_startAt","_startTime","_remoteAddress","getip","recordStartTime","call","logRequest","line","write","property","developmentFormatLine","tokens","status","headersSent","statusCode","color","fn","getUrlToken","originalUrl","url","getMethodToken","method","getResponseTimeToken","digits","ms","toFixed","getTotalTimeToken","elapsed","hrtime","getDateToken","date","Date","clfdate","toISOString","toUTCString","getStatusToken","String","getReferrerToken","headers","referer","referrer","getRemoteUserToken","credentials","name","getHttpVersionToken","httpVersionMajor","httpVersionMinor","getUserAgentToken","getRequestToken","field","header","toLowerCase","Array","isArray","join","getResponseHeader","getHeader","dateTime","getUTCDate","hour","getUTCHours","mins","getUTCMinutes","secs","getUTCSeconds","year","getUTCFullYear","month","getUTCMonth","pad2","TypeError","js","replace","_","arg","tokenArguments","tokenFunction","Function","buf","timer","flush","length","str","setTimeout","push","default","ip","connection","remoteAddress","Boolean","_header","num"],"sources":["/Users/maxympetlyak/Desktop/REDUX/hero_admin_panel_template/node_modules/morgan/index.js"],"sourcesContent":["/*!\n * morgan\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = morgan\nmodule.exports.compile = compile\nmodule.exports.format = format\nmodule.exports.token = token\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar auth = require('basic-auth')\nvar debug = require('debug')('morgan')\nvar deprecate = require('depd')('morgan')\nvar onFinished = require('on-finished')\nvar onHeaders = require('on-headers')\n\n/**\n * Array of CLF month names.\n * @private\n */\n\nvar CLF_MONTH = [\n  'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n  'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n]\n\n/**\n * Default log buffer duration.\n * @private\n */\n\nvar DEFAULT_BUFFER_DURATION = 1000\n\n/**\n * Create a logger middleware.\n *\n * @public\n * @param {String|Function} format\n * @param {Object} [options]\n * @return {Function} middleware\n */\n\nfunction morgan (format, options) {\n  var fmt = format\n  var opts = options || {}\n\n  if (format && typeof format === 'object') {\n    opts = format\n    fmt = opts.format || 'default'\n\n    // smart deprecation message\n    deprecate('morgan(options): use morgan(' + (typeof fmt === 'string' ? JSON.stringify(fmt) : 'format') + ', options) instead')\n  }\n\n  if (fmt === undefined) {\n    deprecate('undefined format: specify a format')\n  }\n\n  // output on request instead of response\n  var immediate = opts.immediate\n\n  // check if log entry should be skipped\n  var skip = opts.skip || false\n\n  // format function\n  var formatLine = typeof fmt !== 'function'\n    ? getFormatFunction(fmt)\n    : fmt\n\n  // stream\n  var buffer = opts.buffer\n  var stream = opts.stream || process.stdout\n\n  // buffering support\n  if (buffer) {\n    deprecate('buffer option')\n\n    // flush interval\n    var interval = typeof buffer !== 'number'\n      ? DEFAULT_BUFFER_DURATION\n      : buffer\n\n    // swap the stream\n    stream = createBufferStream(stream, interval)\n  }\n\n  return function logger (req, res, next) {\n    // request data\n    req._startAt = undefined\n    req._startTime = undefined\n    req._remoteAddress = getip(req)\n\n    // response data\n    res._startAt = undefined\n    res._startTime = undefined\n\n    // record request start\n    recordStartTime.call(req)\n\n    function logRequest () {\n      if (skip !== false && skip(req, res)) {\n        debug('skip request')\n        return\n      }\n\n      var line = formatLine(morgan, req, res)\n\n      if (line == null) {\n        debug('skip line')\n        return\n      }\n\n      debug('log request')\n      stream.write(line + '\\n')\n    };\n\n    if (immediate) {\n      // immediate log\n      logRequest()\n    } else {\n      // record response start\n      onHeaders(res, recordStartTime)\n\n      // log when response finished\n      onFinished(res, logRequest)\n    }\n\n    next()\n  }\n}\n\n/**\n * Apache combined log format.\n */\n\nmorgan.format('combined', ':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"')\n\n/**\n * Apache common log format.\n */\n\nmorgan.format('common', ':remote-addr - :remote-user [:date[clf]] \":method :url HTTP/:http-version\" :status :res[content-length]')\n\n/**\n * Default format.\n */\n\nmorgan.format('default', ':remote-addr - :remote-user [:date] \":method :url HTTP/:http-version\" :status :res[content-length] \":referrer\" \":user-agent\"')\ndeprecate.property(morgan, 'default', 'default format: use combined format')\n\n/**\n * Short format.\n */\n\nmorgan.format('short', ':remote-addr :remote-user :method :url HTTP/:http-version :status :res[content-length] - :response-time ms')\n\n/**\n * Tiny format.\n */\n\nmorgan.format('tiny', ':method :url :status :res[content-length] - :response-time ms')\n\n/**\n * dev (colored)\n */\n\nmorgan.format('dev', function developmentFormatLine (tokens, req, res) {\n  // get the status code if response written\n  var status = headersSent(res)\n    ? res.statusCode\n    : undefined\n\n  // get status color\n  var color = status >= 500 ? 31 // red\n    : status >= 400 ? 33 // yellow\n      : status >= 300 ? 36 // cyan\n        : status >= 200 ? 32 // green\n          : 0 // no color\n\n  // get colored function\n  var fn = developmentFormatLine[color]\n\n  if (!fn) {\n    // compile\n    fn = developmentFormatLine[color] = compile('\\x1b[0m:method :url \\x1b[' +\n      color + 'm:status\\x1b[0m :response-time ms - :res[content-length]\\x1b[0m')\n  }\n\n  return fn(tokens, req, res)\n})\n\n/**\n * request url\n */\n\nmorgan.token('url', function getUrlToken (req) {\n  return req.originalUrl || req.url\n})\n\n/**\n * request method\n */\n\nmorgan.token('method', function getMethodToken (req) {\n  return req.method\n})\n\n/**\n * response time in milliseconds\n */\n\nmorgan.token('response-time', function getResponseTimeToken (req, res, digits) {\n  if (!req._startAt || !res._startAt) {\n    // missing request and/or response start time\n    return\n  }\n\n  // calculate diff\n  var ms = (res._startAt[0] - req._startAt[0]) * 1e3 +\n    (res._startAt[1] - req._startAt[1]) * 1e-6\n\n  // return truncated value\n  return ms.toFixed(digits === undefined ? 3 : digits)\n})\n\n/**\n * total time in milliseconds\n */\n\nmorgan.token('total-time', function getTotalTimeToken (req, res, digits) {\n  if (!req._startAt || !res._startAt) {\n    // missing request and/or response start time\n    return\n  }\n\n  // time elapsed from request start\n  var elapsed = process.hrtime(req._startAt)\n\n  // cover to milliseconds\n  var ms = (elapsed[0] * 1e3) + (elapsed[1] * 1e-6)\n\n  // return truncated value\n  return ms.toFixed(digits === undefined ? 3 : digits)\n})\n\n/**\n * current date\n */\n\nmorgan.token('date', function getDateToken (req, res, format) {\n  var date = new Date()\n\n  switch (format || 'web') {\n    case 'clf':\n      return clfdate(date)\n    case 'iso':\n      return date.toISOString()\n    case 'web':\n      return date.toUTCString()\n  }\n})\n\n/**\n * response status code\n */\n\nmorgan.token('status', function getStatusToken (req, res) {\n  return headersSent(res)\n    ? String(res.statusCode)\n    : undefined\n})\n\n/**\n * normalized referrer\n */\n\nmorgan.token('referrer', function getReferrerToken (req) {\n  return req.headers.referer || req.headers.referrer\n})\n\n/**\n * remote address\n */\n\nmorgan.token('remote-addr', getip)\n\n/**\n * remote user\n */\n\nmorgan.token('remote-user', function getRemoteUserToken (req) {\n  // parse basic credentials\n  var credentials = auth(req)\n\n  // return username\n  return credentials\n    ? credentials.name\n    : undefined\n})\n\n/**\n * HTTP version\n */\n\nmorgan.token('http-version', function getHttpVersionToken (req) {\n  return req.httpVersionMajor + '.' + req.httpVersionMinor\n})\n\n/**\n * UA string\n */\n\nmorgan.token('user-agent', function getUserAgentToken (req) {\n  return req.headers['user-agent']\n})\n\n/**\n * request header\n */\n\nmorgan.token('req', function getRequestToken (req, res, field) {\n  // get header\n  var header = req.headers[field.toLowerCase()]\n\n  return Array.isArray(header)\n    ? header.join(', ')\n    : header\n})\n\n/**\n * response header\n */\n\nmorgan.token('res', function getResponseHeader (req, res, field) {\n  if (!headersSent(res)) {\n    return undefined\n  }\n\n  // get header\n  var header = res.getHeader(field)\n\n  return Array.isArray(header)\n    ? header.join(', ')\n    : header\n})\n\n/**\n * Format a Date in the common log format.\n *\n * @private\n * @param {Date} dateTime\n * @return {string}\n */\n\nfunction clfdate (dateTime) {\n  var date = dateTime.getUTCDate()\n  var hour = dateTime.getUTCHours()\n  var mins = dateTime.getUTCMinutes()\n  var secs = dateTime.getUTCSeconds()\n  var year = dateTime.getUTCFullYear()\n\n  var month = CLF_MONTH[dateTime.getUTCMonth()]\n\n  return pad2(date) + '/' + month + '/' + year +\n    ':' + pad2(hour) + ':' + pad2(mins) + ':' + pad2(secs) +\n    ' +0000'\n}\n\n/**\n * Compile a format string into a function.\n *\n * @param {string} format\n * @return {function}\n * @public\n */\n\nfunction compile (format) {\n  if (typeof format !== 'string') {\n    throw new TypeError('argument format must be a string')\n  }\n\n  var fmt = String(JSON.stringify(format))\n  var js = '  \"use strict\"\\n  return ' + fmt.replace(/:([-\\w]{2,})(?:\\[([^\\]]+)\\])?/g, function (_, name, arg) {\n    var tokenArguments = 'req, res'\n    var tokenFunction = 'tokens[' + String(JSON.stringify(name)) + ']'\n\n    if (arg !== undefined) {\n      tokenArguments += ', ' + String(JSON.stringify(arg))\n    }\n\n    return '\" +\\n    (' + tokenFunction + '(' + tokenArguments + ') || \"-\") + \"'\n  })\n\n  // eslint-disable-next-line no-new-func\n  return new Function('tokens, req, res', js)\n}\n\n/**\n * Create a basic buffering stream.\n *\n * @param {object} stream\n * @param {number} interval\n * @public\n */\n\nfunction createBufferStream (stream, interval) {\n  var buf = []\n  var timer = null\n\n  // flush function\n  function flush () {\n    timer = null\n    stream.write(buf.join(''))\n    buf.length = 0\n  }\n\n  // write function\n  function write (str) {\n    if (timer === null) {\n      timer = setTimeout(flush, interval)\n    }\n\n    buf.push(str)\n  }\n\n  // return a minimal \"stream\"\n  return { write: write }\n}\n\n/**\n * Define a format with the given name.\n *\n * @param {string} name\n * @param {string|function} fmt\n * @public\n */\n\nfunction format (name, fmt) {\n  morgan[name] = fmt\n  return this\n}\n\n/**\n * Lookup and compile a named format function.\n *\n * @param {string} name\n * @return {function}\n * @public\n */\n\nfunction getFormatFunction (name) {\n  // lookup format\n  var fmt = morgan[name] || name || morgan.default\n\n  // return compiled format\n  return typeof fmt !== 'function'\n    ? compile(fmt)\n    : fmt\n}\n\n/**\n * Get request IP address.\n *\n * @private\n * @param {IncomingMessage} req\n * @return {string}\n */\n\nfunction getip (req) {\n  return req.ip ||\n    req._remoteAddress ||\n    (req.connection && req.connection.remoteAddress) ||\n    undefined\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  // istanbul ignore next: node.js 0.8 support\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Pad number to two digits.\n *\n * @private\n * @param {number} num\n * @return {string}\n */\n\nfunction pad2 (num) {\n  var str = String(num)\n\n  // istanbul ignore next: num is current datetime\n  return (str.length === 1 ? '0' : '') + str\n}\n\n/**\n * Record the start time.\n * @private\n */\n\nfunction recordStartTime () {\n  this._startAt = process.hrtime()\n  this._startTime = new Date()\n}\n\n/**\n * Define a token function with the given name,\n * and callback fn(req, res).\n *\n * @param {string} name\n * @param {function} fn\n * @public\n */\n\nfunction token (name, fn) {\n  morgan[name] = fn\n  return this\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}