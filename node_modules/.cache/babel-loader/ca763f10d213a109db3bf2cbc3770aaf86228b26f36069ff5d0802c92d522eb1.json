{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { heroesFetching, HeroesFetched, heroesFetchingError, heroCreated, heroDeleted, heroesFetched } from \"../actions\";\nconst initialState = {\n  heroes: [],\n  heroesLoadingStatus: 'idle'\n};\nconst heroes = createReducer(initialState, {\n  [heroesFetching]: state => {\n    state.heroesLoadingStatus = 'loading';\n  }\n});\n\n// const heroes = createReducer(initialState, builder => {\n//     builder\n//         .addCase(heroesFetching, state => {\n//             state.heroesLoadingStatus = 'loading'\n//         })\n//         .addCase(heroesFetched, (state,action) => {\n//             state.heroesLoadingStatus = 'idle'\n//             state.heroes = action.payload\n//         })\n//         .addCase(heroesFetchingError, state => {\n//             state.heroesLoadingStatus = 'idle'\n//         })\n//         .addCase(heroDeleted, (state,action) => {\n//             state.heroes.filter(item => item.id !== action.payload)\n//         })\n//         .addCase(heroCreated, (state,action) => {\n//             state.heroes.push(action.payload)\n//         })\n//         .addDefaultCase(() => {})\n// });\n\n// const heroes = (state = initialState, action) => {\n//     switch (action.type) {\n//         case 'HEROES_FETCHING':\n//             return {\n//                 ...state,\n//                 heroesLoadingStatus: 'loading'\n//             }\n//         case 'HEROES_FETCHED':\n//             return {\n//                 ...state,\n//                 heroes: action.payload,\n//                 heroesLoadingStatus: 'idle'\n//             }\n//         case 'HEROES_FETCHING_ERROR':\n//             return {\n//                 ...state,\n//                 heroesLoadingStatus: 'error'\n//             }\n//         case 'HERO_CREATED':\n//             return {\n//                 ...state,\n//                 heroes: [...state.heroes, action.payload],\n//             }\n//         case 'HERO_DELETED':\n//             return {\n//                 ...state,\n//                 heroes: state.heroes.filter(item => item.id !== action.payload)\n//             }\n//         default: return state\n//     }\n// }\n\nexport default heroes;","map":{"version":3,"names":["createReducer","heroesFetching","HeroesFetched","heroesFetchingError","heroCreated","heroDeleted","heroesFetched","initialState","heroes","heroesLoadingStatus","state"],"sources":["/Users/maxympetlyak/Desktop/REDUX/hero_admin_panel_template/src/reducers/heroes.js"],"sourcesContent":["import {createReducer} from \"@reduxjs/toolkit\";\n\nimport {\n    heroesFetching,\n    HeroesFetched,\n    heroesFetchingError,\n    heroCreated,\n    heroDeleted, heroesFetched\n} from \"../actions\";\n\nconst initialState = {\n    heroes: [],\n    heroesLoadingStatus: 'idle',\n}\n\nconst heroes = createReducer(initialState, {\n    [heroesFetching]: state => {\n        state.heroesLoadingStatus = 'loading';\n    },\n})\n\n\n// const heroes = createReducer(initialState, builder => {\n//     builder\n//         .addCase(heroesFetching, state => {\n//             state.heroesLoadingStatus = 'loading'\n//         })\n//         .addCase(heroesFetched, (state,action) => {\n//             state.heroesLoadingStatus = 'idle'\n//             state.heroes = action.payload\n//         })\n//         .addCase(heroesFetchingError, state => {\n//             state.heroesLoadingStatus = 'idle'\n//         })\n//         .addCase(heroDeleted, (state,action) => {\n//             state.heroes.filter(item => item.id !== action.payload)\n//         })\n//         .addCase(heroCreated, (state,action) => {\n//             state.heroes.push(action.payload)\n//         })\n//         .addDefaultCase(() => {})\n// });\n\n// const heroes = (state = initialState, action) => {\n//     switch (action.type) {\n//         case 'HEROES_FETCHING':\n//             return {\n//                 ...state,\n//                 heroesLoadingStatus: 'loading'\n//             }\n//         case 'HEROES_FETCHED':\n//             return {\n//                 ...state,\n//                 heroes: action.payload,\n//                 heroesLoadingStatus: 'idle'\n//             }\n//         case 'HEROES_FETCHING_ERROR':\n//             return {\n//                 ...state,\n//                 heroesLoadingStatus: 'error'\n//             }\n//         case 'HERO_CREATED':\n//             return {\n//                 ...state,\n//                 heroes: [...state.heroes, action.payload],\n//             }\n//         case 'HERO_DELETED':\n//             return {\n//                 ...state,\n//                 heroes: state.heroes.filter(item => item.id !== action.payload)\n//             }\n//         default: return state\n//     }\n// }\n\nexport default heroes;"],"mappings":"AAAA,SAAQA,aAAa,QAAO,kBAAkB;AAE9C,SACIC,cAAc,EACdC,aAAa,EACbC,mBAAmB,EACnBC,WAAW,EACXC,WAAW,EAAEC,aAAa,QACvB,YAAY;AAEnB,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,EAAE;EACVC,mBAAmB,EAAE;AACzB,CAAC;AAED,MAAMD,MAAM,GAAGR,aAAa,CAACO,YAAY,EAAE;EACvC,CAACN,cAAc,GAAGS,KAAK,IAAI;IACvBA,KAAK,CAACD,mBAAmB,GAAG,SAAS;EACzC;AACJ,CAAC,CAAC;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}