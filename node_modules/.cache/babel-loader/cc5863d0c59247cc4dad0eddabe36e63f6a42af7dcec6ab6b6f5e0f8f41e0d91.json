{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport { useHttp } from '../../hooks/http.hook';\nconst filtersAdapter = createEntityAdapter();\nconst initialState = filtersAdapter.getInitialState({\n  filtersLoadingStatus: 'idle',\n  activeFilter: 'all'\n});\nexport const fetchFilters = _s(createAsyncThunk('filters/fetchFilters', _s(async () => {\n  _s();\n  const {\n    request\n  } = useHttp();\n  return await request(\"http://localhost:3001/filters\");\n}, \"Cd6rTTFIaDkCOxqWEjU2WwhZI/U=\", false, function () {\n  return [useHttp];\n})), \"Cd6rTTFIaDkCOxqWEjU2WwhZI/U=\", false, function () {\n  return [useHttp];\n});\nconst filtersSlice = createSlice({\n  name: 'filters',\n  initialState,\n  reducers: {\n    filtersChanged: (state, action) => {\n      state.activeFilter = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchFilters.pending, state => {\n      state.filtersLoadingStatus = 'loading';\n    }).addCase(fetchFilters.fulfilled, (state, action) => {\n      state.filtersLoadingStatus = 'idle';\n      filtersAdapter.setAll(state, action.payload);\n    }).addCase(fetchFilters.rejected, state => {\n      state.filtersLoadingStatus = 'error';\n    }).addDefaultCase(() => {});\n  }\n});\nconst {\n  actions,\n  reducer\n} = filtersSlice;\nexport default reducer;\nexport const {\n  selectAll\n} = filtersAdapter.getSelectors(state => state.filters);\nexport const {\n  filtersChanged\n} = actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","createEntityAdapter","useHttp","filtersAdapter","initialState","getInitialState","filtersLoadingStatus","activeFilter","fetchFilters","_s","request","filtersSlice","name","reducers","filtersChanged","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors","filters"],"sources":["/Users/maxympetlyak/Desktop/REDUX/hero_admin_panel_template/src/components/heroesFilters/filtersSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\nimport {useHttp} from '../../hooks/http.hook';\n\nconst filtersAdapter = createEntityAdapter();\n\nconst initialState = filtersAdapter.getInitialState({\n    filtersLoadingStatus: 'idle',\n    activeFilter: 'all'\n});\n\nexport const fetchFilters = createAsyncThunk(\n    'filters/fetchFilters',\n    async () => {\n        const {request} = useHttp();\n        return await request(\"http://localhost:3001/filters\");\n    }\n);\n\nconst filtersSlice = createSlice({\n    name: 'filters',\n    initialState,\n    reducers: {\n        filtersChanged: (state, action) => {\n            state.activeFilter = action.payload;\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchFilters.pending, state => {state.filtersLoadingStatus = 'loading'})\n            .addCase(fetchFilters.fulfilled, (state, action) => {\n                state.filtersLoadingStatus = 'idle';\n                filtersAdapter.setAll(state, action.payload);\n            })\n            .addCase(fetchFilters.rejected, state => {\n                state.filtersLoadingStatus = 'error';\n            })\n            .addDefaultCase(() => {})\n    }\n});\n\nconst {actions, reducer} = filtersSlice;\n\nexport default reducer;\n\nexport const {selectAll} = filtersAdapter.getSelectors(state => state.filters);\n\nexport const {\n    filtersChanged\n} = actions;"],"mappings":";AAAA,SAASA,WAAW,EAAEC,gBAAgB,EAAEC,mBAAmB,QAAQ,kBAAkB;AACrF,SAAQC,OAAO,QAAO,uBAAuB;AAE7C,MAAMC,cAAc,GAAGF,mBAAmB,CAAC,CAAC;AAE5C,MAAMG,YAAY,GAAGD,cAAc,CAACE,eAAe,CAAC;EAChDC,oBAAoB,EAAE,MAAM;EAC5BC,YAAY,EAAE;AAClB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAAC,EAAA,CAAGT,gBAAgB,CACxC,sBAAsB,EAAAS,EAAA,CACtB,YAAY;EAAAA,EAAA;EACR,MAAM;IAACC;EAAO,CAAC,GAAGR,OAAO,CAAC,CAAC;EAC3B,OAAO,MAAMQ,OAAO,CAAC,+BAA+B,CAAC;AACzD,CAAC;EAAA,QAFqBR,OAAO;AAAA,EAGjC,CAAC;EAAA,QAHyBA,OAAO;AAAA,EAGhC;AAED,MAAMS,YAAY,GAAGZ,WAAW,CAAC;EAC7Ba,IAAI,EAAE,SAAS;EACfR,YAAY;EACZS,QAAQ,EAAE;IACNC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACR,YAAY,GAAGS,MAAM,CAACC,OAAO;IACvC;EACJ,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACZ,YAAY,CAACa,OAAO,EAAEN,KAAK,IAAI;MAACA,KAAK,CAACT,oBAAoB,GAAG,SAAS;IAAA,CAAC,CAAC,CAChFc,OAAO,CAACZ,YAAY,CAACc,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACT,oBAAoB,GAAG,MAAM;MACnCH,cAAc,CAACoB,MAAM,CAACR,KAAK,EAAEC,MAAM,CAACC,OAAO,CAAC;IAChD,CAAC,CAAC,CACDG,OAAO,CAACZ,YAAY,CAACgB,QAAQ,EAAET,KAAK,IAAI;MACrCA,KAAK,CAACT,oBAAoB,GAAG,OAAO;IACxC,CAAC,CAAC,CACDmB,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;EACjC;AACJ,CAAC,CAAC;AAEF,MAAM;EAACC,OAAO;EAAEC;AAAO,CAAC,GAAGhB,YAAY;AAEvC,eAAegB,OAAO;AAEtB,OAAO,MAAM;EAACC;AAAS,CAAC,GAAGzB,cAAc,CAAC0B,YAAY,CAACd,KAAK,IAAIA,KAAK,CAACe,OAAO,CAAC;AAE9E,OAAO,MAAM;EACThB;AACJ,CAAC,GAAGY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}