{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { useHttp } from \"../../hooks/http.hook\";\nconst initialState = {\n  heroes: [],\n  heroesLoadingStatus: 'idle'\n};\nconst fetchHeroes = _s(createAsyncThunk('heroes/fetchHeroes', _s(async () => {\n  _s();\n  const {\n    request\n  } = useHttp();\n  return await request('http://localhost:3001/heroes');\n}, \"Cd6rTTFIaDkCOxqWEjU2WwhZI/U=\", false, function () {\n  return [useHttp];\n})), \"Cd6rTTFIaDkCOxqWEjU2WwhZI/U=\", false, function () {\n  return [useHttp];\n});\nconst heroesSlice = createSlice({\n  name: 'heroes',\n  initialState,\n  reducers: {\n    heroesFetching: state => {\n      state.heroesLoadingStatus = 'loading';\n    },\n    heroesFetched: (state, action) => {\n      state.heroesLoadingStatus = 'idle';\n      state.heroes = action.payload;\n    },\n    heroesFetchingError: state => {\n      state.heroesLoadingStatus = 'error';\n    },\n    heroCreated: (state, action) => {\n      state.heroes.push(action.payload);\n    },\n    heroDeleted: (state, action) => {\n      state.heroes = state.heroes.filter(item => item.id !== action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchHeroes.pending, state => {\n      state.heroesLoadingStatus = 'loading';\n    }).addCase(fetchHeroes.fulfilled, (state, action) => {\n      state.heroesLoadingStatus = 'idle';\n      state.heroes = action.payload;\n    }).addCase(fetchHeroes.rejected, state => {\n      state.heroesLoadingStatus = 'error';\n    });\n  }\n});\nconst {\n  actions,\n  reducer\n} = heroesSlice;\nexport default reducer;\nexport const {\n  heroCreated,\n  heroDeleted,\n  heroesFetched,\n  heroesFetching,\n  heroesFetchingError\n} = actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","useHttp","initialState","heroes","heroesLoadingStatus","fetchHeroes","_s","request","heroesSlice","name","reducers","heroesFetching","state","heroesFetched","action","payload","heroesFetchingError","heroCreated","push","heroDeleted","filter","item","id","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["/Users/maxympetlyak/Desktop/REDUX/hero_admin_panel_template/src/components/heroesList/heroesSlice.js"],"sourcesContent":["import { createSlice,createAsyncThunk } from \"@reduxjs/toolkit\";\nimport {useHttp} from \"../../hooks/http.hook\";\n\nconst initialState = {\n    heroes: [],\n    heroesLoadingStatus: 'idle',\n}\n\nconst fetchHeroes = createAsyncThunk(\n    'heroes/fetchHeroes',\n    async () => {\n        const {request} = useHttp();\n            return await request('http://localhost:3001/heroes')\n    }\n)\n\nconst heroesSlice = createSlice({\n        name: 'heroes',\n        initialState,\n        reducers: {\n            heroesFetching: state => {state.heroesLoadingStatus = 'loading'},\n            heroesFetched: (state, action) => {\n                state.heroesLoadingStatus = 'idle';\n                state.heroes = action.payload;\n            },\n            heroesFetchingError: state => {\n                state.heroesLoadingStatus = 'error';\n            },\n            heroCreated: (state, action) => {\n                state.heroes.push(action.payload);\n            },\n            heroDeleted: (state, action) => {\n                state.heroes = state.heroes.filter(item => item.id !== action.payload);\n            }\n        },\n    extraReducers: (builder) => {\n            builder\n                .addCase(fetchHeroes.pending,state => {state.heroesLoadingStatus = 'loading'})\n                .addCase(fetchHeroes.fulfilled, (state,action) => {\n                    state.heroesLoadingStatus = 'idle'\n                    state.heroes = action.payload\n                })\n                .addCase(fetchHeroes.rejected, state => {\n                    state.heroesLoadingStatus = 'error'\n                })\n\n    }\n    }\n);\n\nconst {actions,reducer} = heroesSlice;\n\nexport default reducer;\nexport const {\n    heroCreated,\n    heroDeleted,\n    heroesFetched,\n    heroesFetching,\n    heroesFetchingError\n} = actions"],"mappings":";AAAA,SAASA,WAAW,EAACC,gBAAgB,QAAQ,kBAAkB;AAC/D,SAAQC,OAAO,QAAO,uBAAuB;AAE7C,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,EAAE;EACVC,mBAAmB,EAAE;AACzB,CAAC;AAED,MAAMC,WAAW,GAAAC,EAAA,CAAGN,gBAAgB,CAChC,oBAAoB,EAAAM,EAAA,CACpB,YAAY;EAAAA,EAAA;EACR,MAAM;IAACC;EAAO,CAAC,GAAGN,OAAO,CAAC,CAAC;EACvB,OAAO,MAAMM,OAAO,CAAC,8BAA8B,CAAC;AAC5D,CAAC;EAAA,QAFqBN,OAAO;AAAA,EAGjC,CAAC;EAAA,QAHyBA,OAAO;AAAA,EAGhC;AAED,MAAMO,WAAW,GAAGT,WAAW,CAAC;EACxBU,IAAI,EAAE,QAAQ;EACdP,YAAY;EACZQ,QAAQ,EAAE;IACNC,cAAc,EAAEC,KAAK,IAAI;MAACA,KAAK,CAACR,mBAAmB,GAAG,SAAS;IAAA,CAAC;IAChES,aAAa,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9BF,KAAK,CAACR,mBAAmB,GAAG,MAAM;MAClCQ,KAAK,CAACT,MAAM,GAAGW,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,mBAAmB,EAAEJ,KAAK,IAAI;MAC1BA,KAAK,CAACR,mBAAmB,GAAG,OAAO;IACvC,CAAC;IACDa,WAAW,EAAEA,CAACL,KAAK,EAAEE,MAAM,KAAK;MAC5BF,KAAK,CAACT,MAAM,CAACe,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC;IACrC,CAAC;IACDI,WAAW,EAAEA,CAACP,KAAK,EAAEE,MAAM,KAAK;MAC5BF,KAAK,CAACT,MAAM,GAAGS,KAAK,CAACT,MAAM,CAACiB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKR,MAAM,CAACC,OAAO,CAAC;IAC1E;EACJ,CAAC;EACLQ,aAAa,EAAGC,OAAO,IAAK;IACpBA,OAAO,CACFC,OAAO,CAACpB,WAAW,CAACqB,OAAO,EAACd,KAAK,IAAI;MAACA,KAAK,CAACR,mBAAmB,GAAG,SAAS;IAAA,CAAC,CAAC,CAC7EqB,OAAO,CAACpB,WAAW,CAACsB,SAAS,EAAE,CAACf,KAAK,EAACE,MAAM,KAAK;MAC9CF,KAAK,CAACR,mBAAmB,GAAG,MAAM;MAClCQ,KAAK,CAACT,MAAM,GAAGW,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC,CACDU,OAAO,CAACpB,WAAW,CAACuB,QAAQ,EAAEhB,KAAK,IAAI;MACpCA,KAAK,CAACR,mBAAmB,GAAG,OAAO;IACvC,CAAC,CAAC;EAEd;AACA,CACJ,CAAC;AAED,MAAM;EAACyB,OAAO;EAACC;AAAO,CAAC,GAAGtB,WAAW;AAErC,eAAesB,OAAO;AACtB,OAAO,MAAM;EACTb,WAAW;EACXE,WAAW;EACXN,aAAa;EACbF,cAAc;EACdK;AACJ,CAAC,GAAGa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}