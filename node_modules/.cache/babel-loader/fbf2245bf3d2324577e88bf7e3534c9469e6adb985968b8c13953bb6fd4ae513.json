{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { useHttp } from \"../../hooks/http.hook\";\nexport const fetchFilters = _s(createAsyncThunk('heroes/fetchFilters', _s(async () => {\n  _s();\n  const {\n    request\n  } = useHttp();\n  return await request('http://localhost:3001/filters');\n}, \"Cd6rTTFIaDkCOxqWEjU2WwhZI/U=\", false, function () {\n  return [useHttp];\n})), \"Cd6rTTFIaDkCOxqWEjU2WwhZI/U=\", false, function () {\n  return [useHttp];\n});\nconst initialState = {\n  filters: [],\n  filtersLoadingStatus: 'idle',\n  activeFilter: 'all'\n};\nconst filtersSlice = createSlice({\n  name: \"filters\",\n  initialState,\n  reducers: {\n    filtersFetching: state => {\n      state.filtersLoadingStatus = 'loading';\n    },\n    filtersFetched: (state, action) => {\n      state.filtersLoadingStatus = 'idle';\n      state.filteres = action.payload;\n    },\n    filtersFetchingError: state => {\n      state.filtersLoadingStatus = 'error';\n    },\n    filtersChanged: (state, action) => {\n      state.activeFilter = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchFilters.pending, state => state.filtersLoadingStatus = 'loading').addCase(fetchFilters.fulfilled, (state, action) => {\n      state.filtersLoadingStatus = 'idle';\n      state.filters = action.payload;\n    }).addCase(fetchFilters.rejected, state => state.filtersLoadingStatus = 'error').addDefaultCase(() => {});\n  }\n});\nconst {\n  actions,\n  reducer\n} = filtersSlice;\nexport default reducer;\nexport const {\n  filtersFetching,\n  filtersFetchingError,\n  filtersFetched,\n  filtersChanged\n} = actions;","map":{"version":3,"names":["createSlice","createAsyncThunk","useHttp","fetchFilters","_s","request","initialState","filters","filtersLoadingStatus","activeFilter","filtersSlice","name","reducers","filtersFetching","state","filtersFetched","action","filteres","payload","filtersFetchingError","filtersChanged","extraReducers","builder","addCase","pending","fulfilled","rejected","addDefaultCase","actions","reducer"],"sources":["/Users/maxympetlyak/Desktop/REDUX/hero_admin_panel_template/src/components/heroesFilters/filtersSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport {useHttp} from \"../../hooks/http.hook\";\n\nexport const fetchFilters = createAsyncThunk(\n    'heroes/fetchFilters',\n    async () => {\n        const {request} = useHttp()\n        return await request('http://localhost:3001/filters')\n    }\n)\n\nconst initialState = {\n    filters: [],\n    filtersLoadingStatus: 'idle',\n    activeFilter: 'all',\n}\n\nconst filtersSlice = createSlice({\n    name: \"filters\",\n    initialState,\n    reducers: {\n        filtersFetching: (state) => {\n            state.filtersLoadingStatus = 'loading';\n        },\n        filtersFetched: (state, action) => {\n            state.filtersLoadingStatus = 'idle';\n            state.filteres = action.payload;\n        },\n        filtersFetchingError: state => {\n            state.filtersLoadingStatus = 'error';\n        },\n        filtersChanged: (state, action) => {\n            state.activeFilter = action.payload;\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchFilters.pending, state => state.filtersLoadingStatus = 'loading')\n            .addCase(fetchFilters.fulfilled, (state, action) => {\n                state.filtersLoadingStatus = 'idle';\n                state.filters = action.payload;\n            })\n            .addCase(fetchFilters.rejected, state => state.filtersLoadingStatus = 'error')\n            .addDefaultCase(() => {})\n    }\n})\n\nconst {actions,reducer} = filtersSlice\n\nexport default reducer;\n\nexport const {\n    filtersFetching,\n    filtersFetchingError,\n    filtersFetched,\n    filtersChanged,\n} = actions"],"mappings":";AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAAQC,OAAO,QAAO,uBAAuB;AAE7C,OAAO,MAAMC,YAAY,GAAAC,EAAA,CAAGH,gBAAgB,CACxC,qBAAqB,EAAAG,EAAA,CACrB,YAAY;EAAAA,EAAA;EACR,MAAM;IAACC;EAAO,CAAC,GAAGH,OAAO,CAAC,CAAC;EAC3B,OAAO,MAAMG,OAAO,CAAC,+BAA+B,CAAC;AACzD,CAAC;EAAA,QAFqBH,OAAO;AAAA,EAGjC,CAAC;EAAA,QAHyBA,OAAO;AAAA,EAGhC;AAED,MAAMI,YAAY,GAAG;EACjBC,OAAO,EAAE,EAAE;EACXC,oBAAoB,EAAE,MAAM;EAC5BC,YAAY,EAAE;AAClB,CAAC;AAED,MAAMC,YAAY,GAAGV,WAAW,CAAC;EAC7BW,IAAI,EAAE,SAAS;EACfL,YAAY;EACZM,QAAQ,EAAE;IACNC,eAAe,EAAGC,KAAK,IAAK;MACxBA,KAAK,CAACN,oBAAoB,GAAG,SAAS;IAC1C,CAAC;IACDO,cAAc,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACN,oBAAoB,GAAG,MAAM;MACnCM,KAAK,CAACG,QAAQ,GAAGD,MAAM,CAACE,OAAO;IACnC,CAAC;IACDC,oBAAoB,EAAEL,KAAK,IAAI;MAC3BA,KAAK,CAACN,oBAAoB,GAAG,OAAO;IACxC,CAAC;IACDY,cAAc,EAAEA,CAACN,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACL,YAAY,GAAGO,MAAM,CAACE,OAAO;IACvC;EACJ,CAAC;EACDG,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACpB,YAAY,CAACqB,OAAO,EAAEV,KAAK,IAAIA,KAAK,CAACN,oBAAoB,GAAG,SAAS,CAAC,CAC9Ee,OAAO,CAACpB,YAAY,CAACsB,SAAS,EAAE,CAACX,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACN,oBAAoB,GAAG,MAAM;MACnCM,KAAK,CAACP,OAAO,GAAGS,MAAM,CAACE,OAAO;IAClC,CAAC,CAAC,CACDK,OAAO,CAACpB,YAAY,CAACuB,QAAQ,EAAEZ,KAAK,IAAIA,KAAK,CAACN,oBAAoB,GAAG,OAAO,CAAC,CAC7EmB,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;EACjC;AACJ,CAAC,CAAC;AAEF,MAAM;EAACC,OAAO;EAACC;AAAO,CAAC,GAAGnB,YAAY;AAEtC,eAAemB,OAAO;AAEtB,OAAO,MAAM;EACThB,eAAe;EACfM,oBAAoB;EACpBJ,cAAc;EACdK;AACJ,CAAC,GAAGQ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}