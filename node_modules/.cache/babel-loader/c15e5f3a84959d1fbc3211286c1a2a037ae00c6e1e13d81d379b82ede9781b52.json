{"ast":null,"code":"/*!\n * errorhandler\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\nvar accepts = require('accepts');\nvar escapeHtml = require('escape-html');\nvar fs = require('fs');\nvar path = require('path');\nvar util = require('util');\n\n/**\n * Module variables.\n * @private\n */\n\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g;\nvar NEW_LINE_REGEXP = /\\n/g;\nvar STYLESHEET = fs.readFileSync(path.join(__dirname, '/public/style.css'), 'utf8');\nvar TEMPLATE = fs.readFileSync(path.join(__dirname, '/public/error.html'), 'utf8');\nvar inspect = util.inspect;\nvar toString = Object.prototype.toString;\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function' ? setImmediate : function (fn) {\n  process.nextTick(fn.bind.apply(fn, arguments));\n};\n\n/**\n * Error handler:\n *\n * Development error handler, providing stack traces\n * and error message responses for requests accepting text, html,\n * or json.\n *\n * Text:\n *\n *   By default, and when _text/plain_ is accepted a simple stack trace\n *   or error message will be returned.\n *\n * JSON:\n *\n *   When _application/json_ is accepted, connect will respond with\n *   an object in the form of `{ \"error\": error }`.\n *\n * HTML:\n *\n *   When accepted connect will output a nice html stack trace.\n *\n * @return {Function}\n * @api public\n */\n\nexports = module.exports = function errorHandler(options) {\n  // get environment\n  var env = process.env.NODE_ENV || 'development';\n\n  // get options\n  var opts = options || {};\n\n  // get log option\n  var log = opts.log === undefined ? env !== 'test' : opts.log;\n  if (typeof log !== 'function' && typeof log !== 'boolean') {\n    throw new TypeError('option log must be function or boolean');\n  }\n\n  // default logging using console.error\n  if (log === true) {\n    log = logerror;\n  }\n  return function errorHandler(err, req, res, next) {\n    // respect err.statusCode\n    if (err.statusCode) {\n      res.statusCode = err.statusCode;\n    }\n\n    // respect err.status\n    if (err.status) {\n      res.statusCode = err.status;\n    }\n\n    // default status code to 500\n    if (res.statusCode < 400) {\n      res.statusCode = 500;\n    }\n\n    // log the error\n    var str = stringify(err);\n    if (log) {\n      defer(log, err, str, req, res);\n    }\n\n    // cannot actually respond\n    if (res._header) {\n      return req.socket.destroy();\n    }\n\n    // negotiate\n    var accept = accepts(req);\n    var type = accept.type('html', 'json', 'text');\n\n    // Security header for content sniffing\n    res.setHeader('X-Content-Type-Options', 'nosniff');\n\n    // html\n    if (type === 'html') {\n      var isInspect = !err.stack && String(err) === toString.call(err);\n      var errorHtml = !isInspect ? escapeHtmlBlock(str.split('\\n', 1)[0] || 'Error') : 'Error';\n      var stack = !isInspect ? String(str).split('\\n').slice(1) : [str];\n      var stackHtml = stack.map(function (v) {\n        return '<li>' + escapeHtmlBlock(v) + '</li>';\n      }).join('');\n      var body = TEMPLATE.replace('{style}', STYLESHEET).replace('{stack}', stackHtml).replace('{title}', escapeHtml(exports.title)).replace('{statusCode}', res.statusCode).replace(/\\{error\\}/g, errorHtml);\n      res.setHeader('Content-Type', 'text/html; charset=utf-8');\n      res.end(body);\n      // json\n    } else if (type === 'json') {\n      var error = {\n        message: err.message,\n        stack: err.stack\n      };\n      for (var prop in err) error[prop] = err[prop];\n      var json = JSON.stringify({\n        error: error\n      }, null, 2);\n      res.setHeader('Content-Type', 'application/json; charset=utf-8');\n      res.end(json);\n      // plain text\n    } else {\n      res.setHeader('Content-Type', 'text/plain; charset=utf-8');\n      res.end(str);\n    }\n  };\n};\n\n/**\n * Template title, framework authors may override this value.\n */\n\nexports.title = 'Connect';\n\n/**\n * Escape a block of HTML, preserving whitespace.\n * @api private\n */\n\nfunction escapeHtmlBlock(str) {\n  return escapeHtml(str).replace(DOUBLE_SPACE_REGEXP, ' &nbsp;').replace(NEW_LINE_REGEXP, '<br>');\n}\n\n/**\n * Stringify a value.\n * @api private\n */\n\nfunction stringify(val) {\n  var stack = val.stack;\n  if (stack) {\n    return String(stack);\n  }\n  var str = String(val);\n  return str === toString.call(val) ? inspect(val) : str;\n}\n\n/**\n * Log error to console.\n * @api private\n */\n\nfunction logerror(err, str) {\n  console.error(str || err.stack);\n}","map":{"version":3,"names":["accepts","require","escapeHtml","fs","path","util","DOUBLE_SPACE_REGEXP","NEW_LINE_REGEXP","STYLESHEET","readFileSync","join","__dirname","TEMPLATE","inspect","toString","Object","prototype","defer","setImmediate","fn","process","nextTick","bind","apply","arguments","exports","module","errorHandler","options","env","NODE_ENV","opts","log","undefined","TypeError","logerror","err","req","res","next","statusCode","status","str","stringify","_header","socket","destroy","accept","type","setHeader","isInspect","stack","String","call","errorHtml","escapeHtmlBlock","split","slice","stackHtml","map","v","body","replace","title","end","error","message","prop","json","JSON","val","console"],"sources":["/Users/maxympetlyak/Desktop/REDUX/hero_admin_panel_template/node_modules/errorhandler/index.js"],"sourcesContent":["/*!\n * errorhandler\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar accepts = require('accepts')\nvar escapeHtml = require('escape-html')\nvar fs = require('fs')\nvar path = require('path')\nvar util = require('util')\n\n/**\n * Module variables.\n * @private\n */\n\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g\nvar NEW_LINE_REGEXP = /\\n/g\nvar STYLESHEET = fs.readFileSync(path.join(__dirname, '/public/style.css'), 'utf8')\nvar TEMPLATE = fs.readFileSync(path.join(__dirname, '/public/error.html'), 'utf8')\nvar inspect = util.inspect\nvar toString = Object.prototype.toString\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Error handler:\n *\n * Development error handler, providing stack traces\n * and error message responses for requests accepting text, html,\n * or json.\n *\n * Text:\n *\n *   By default, and when _text/plain_ is accepted a simple stack trace\n *   or error message will be returned.\n *\n * JSON:\n *\n *   When _application/json_ is accepted, connect will respond with\n *   an object in the form of `{ \"error\": error }`.\n *\n * HTML:\n *\n *   When accepted connect will output a nice html stack trace.\n *\n * @return {Function}\n * @api public\n */\n\nexports = module.exports = function errorHandler (options) {\n  // get environment\n  var env = process.env.NODE_ENV || 'development'\n\n  // get options\n  var opts = options || {}\n\n  // get log option\n  var log = opts.log === undefined\n    ? env !== 'test'\n    : opts.log\n\n  if (typeof log !== 'function' && typeof log !== 'boolean') {\n    throw new TypeError('option log must be function or boolean')\n  }\n\n  // default logging using console.error\n  if (log === true) {\n    log = logerror\n  }\n\n  return function errorHandler (err, req, res, next) {\n    // respect err.statusCode\n    if (err.statusCode) {\n      res.statusCode = err.statusCode\n    }\n\n    // respect err.status\n    if (err.status) {\n      res.statusCode = err.status\n    }\n\n    // default status code to 500\n    if (res.statusCode < 400) {\n      res.statusCode = 500\n    }\n\n    // log the error\n    var str = stringify(err)\n    if (log) {\n      defer(log, err, str, req, res)\n    }\n\n    // cannot actually respond\n    if (res._header) {\n      return req.socket.destroy()\n    }\n\n    // negotiate\n    var accept = accepts(req)\n    var type = accept.type('html', 'json', 'text')\n\n    // Security header for content sniffing\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n\n    // html\n    if (type === 'html') {\n      var isInspect = !err.stack && String(err) === toString.call(err)\n      var errorHtml = !isInspect\n        ? escapeHtmlBlock(str.split('\\n', 1)[0] || 'Error')\n        : 'Error'\n      var stack = !isInspect\n        ? String(str).split('\\n').slice(1)\n        : [str]\n      var stackHtml = stack\n        .map(function (v) { return '<li>' + escapeHtmlBlock(v) + '</li>' })\n        .join('')\n      var body = TEMPLATE\n        .replace('{style}', STYLESHEET)\n        .replace('{stack}', stackHtml)\n        .replace('{title}', escapeHtml(exports.title))\n        .replace('{statusCode}', res.statusCode)\n        .replace(/\\{error\\}/g, errorHtml)\n      res.setHeader('Content-Type', 'text/html; charset=utf-8')\n      res.end(body)\n    // json\n    } else if (type === 'json') {\n      var error = { message: err.message, stack: err.stack }\n      for (var prop in err) error[prop] = err[prop]\n      var json = JSON.stringify({ error: error }, null, 2)\n      res.setHeader('Content-Type', 'application/json; charset=utf-8')\n      res.end(json)\n    // plain text\n    } else {\n      res.setHeader('Content-Type', 'text/plain; charset=utf-8')\n      res.end(str)\n    }\n  }\n}\n\n/**\n * Template title, framework authors may override this value.\n */\n\nexports.title = 'Connect'\n\n/**\n * Escape a block of HTML, preserving whitespace.\n * @api private\n */\n\nfunction escapeHtmlBlock (str) {\n  return escapeHtml(str)\n    .replace(DOUBLE_SPACE_REGEXP, ' &nbsp;')\n    .replace(NEW_LINE_REGEXP, '<br>')\n}\n\n/**\n * Stringify a value.\n * @api private\n */\n\nfunction stringify (val) {\n  var stack = val.stack\n\n  if (stack) {\n    return String(stack)\n  }\n\n  var str = String(val)\n\n  return str === toString.call(val)\n    ? inspect(val)\n    : str\n}\n\n/**\n * Log error to console.\n * @api private\n */\n\nfunction logerror (err, str) {\n  console.error(str || err.stack)\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIC,UAAU,GAAGD,OAAO,CAAC,aAAa,CAAC;AACvC,IAAIE,EAAE,GAAGF,OAAO,CAAC,IAAI,CAAC;AACtB,IAAIG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAII,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;;AAE1B;AACA;AACA;AACA;;AAEA,IAAIK,mBAAmB,GAAG,UAAU;AACpC,IAAIC,eAAe,GAAG,KAAK;AAC3B,IAAIC,UAAU,GAAGL,EAAE,CAACM,YAAY,CAACL,IAAI,CAACM,IAAI,CAACC,SAAS,EAAE,mBAAmB,CAAC,EAAE,MAAM,CAAC;AACnF,IAAIC,QAAQ,GAAGT,EAAE,CAACM,YAAY,CAACL,IAAI,CAACM,IAAI,CAACC,SAAS,EAAE,oBAAoB,CAAC,EAAE,MAAM,CAAC;AAClF,IAAIE,OAAO,GAAGR,IAAI,CAACQ,OAAO;AAC1B,IAAIC,QAAQ,GAAGC,MAAM,CAACC,SAAS,CAACF,QAAQ;;AAExC;AACA,IAAIG,KAAK,GAAG,OAAOC,YAAY,KAAK,UAAU,GAC1CA,YAAY,GACZ,UAAUC,EAAE,EAAE;EAAEC,OAAO,CAACC,QAAQ,CAACF,EAAE,CAACG,IAAI,CAACC,KAAK,CAACJ,EAAE,EAAEK,SAAS,CAAC,CAAC;AAAC,CAAC;;AAEpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,OAAO,GAAGC,MAAM,CAACD,OAAO,GAAG,SAASE,YAAYA,CAAEC,OAAO,EAAE;EACzD;EACA,IAAIC,GAAG,GAAGT,OAAO,CAACS,GAAG,CAACC,QAAQ,IAAI,aAAa;;EAE/C;EACA,IAAIC,IAAI,GAAGH,OAAO,IAAI,CAAC,CAAC;;EAExB;EACA,IAAII,GAAG,GAAGD,IAAI,CAACC,GAAG,KAAKC,SAAS,GAC5BJ,GAAG,KAAK,MAAM,GACdE,IAAI,CAACC,GAAG;EAEZ,IAAI,OAAOA,GAAG,KAAK,UAAU,IAAI,OAAOA,GAAG,KAAK,SAAS,EAAE;IACzD,MAAM,IAAIE,SAAS,CAAC,wCAAwC,CAAC;EAC/D;;EAEA;EACA,IAAIF,GAAG,KAAK,IAAI,EAAE;IAChBA,GAAG,GAAGG,QAAQ;EAChB;EAEA,OAAO,SAASR,YAAYA,CAAES,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAE;IACjD;IACA,IAAIH,GAAG,CAACI,UAAU,EAAE;MAClBF,GAAG,CAACE,UAAU,GAAGJ,GAAG,CAACI,UAAU;IACjC;;IAEA;IACA,IAAIJ,GAAG,CAACK,MAAM,EAAE;MACdH,GAAG,CAACE,UAAU,GAAGJ,GAAG,CAACK,MAAM;IAC7B;;IAEA;IACA,IAAIH,GAAG,CAACE,UAAU,GAAG,GAAG,EAAE;MACxBF,GAAG,CAACE,UAAU,GAAG,GAAG;IACtB;;IAEA;IACA,IAAIE,GAAG,GAAGC,SAAS,CAACP,GAAG,CAAC;IACxB,IAAIJ,GAAG,EAAE;MACPf,KAAK,CAACe,GAAG,EAAEI,GAAG,EAAEM,GAAG,EAAEL,GAAG,EAAEC,GAAG,CAAC;IAChC;;IAEA;IACA,IAAIA,GAAG,CAACM,OAAO,EAAE;MACf,OAAOP,GAAG,CAACQ,MAAM,CAACC,OAAO,CAAC,CAAC;IAC7B;;IAEA;IACA,IAAIC,MAAM,GAAG/C,OAAO,CAACqC,GAAG,CAAC;IACzB,IAAIW,IAAI,GAAGD,MAAM,CAACC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;;IAE9C;IACAV,GAAG,CAACW,SAAS,CAAC,wBAAwB,EAAE,SAAS,CAAC;;IAElD;IACA,IAAID,IAAI,KAAK,MAAM,EAAE;MACnB,IAAIE,SAAS,GAAG,CAACd,GAAG,CAACe,KAAK,IAAIC,MAAM,CAAChB,GAAG,CAAC,KAAKtB,QAAQ,CAACuC,IAAI,CAACjB,GAAG,CAAC;MAChE,IAAIkB,SAAS,GAAG,CAACJ,SAAS,GACtBK,eAAe,CAACb,GAAG,CAACc,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,GACjD,OAAO;MACX,IAAIL,KAAK,GAAG,CAACD,SAAS,GAClBE,MAAM,CAACV,GAAG,CAAC,CAACc,KAAK,CAAC,IAAI,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,GAChC,CAACf,GAAG,CAAC;MACT,IAAIgB,SAAS,GAAGP,KAAK,CAClBQ,GAAG,CAAC,UAAUC,CAAC,EAAE;QAAE,OAAO,MAAM,GAAGL,eAAe,CAACK,CAAC,CAAC,GAAG,OAAO;MAAC,CAAC,CAAC,CAClElD,IAAI,CAAC,EAAE,CAAC;MACX,IAAImD,IAAI,GAAGjD,QAAQ,CAChBkD,OAAO,CAAC,SAAS,EAAEtD,UAAU,CAAC,CAC9BsD,OAAO,CAAC,SAAS,EAAEJ,SAAS,CAAC,CAC7BI,OAAO,CAAC,SAAS,EAAE5D,UAAU,CAACuB,OAAO,CAACsC,KAAK,CAAC,CAAC,CAC7CD,OAAO,CAAC,cAAc,EAAExB,GAAG,CAACE,UAAU,CAAC,CACvCsB,OAAO,CAAC,YAAY,EAAER,SAAS,CAAC;MACnChB,GAAG,CAACW,SAAS,CAAC,cAAc,EAAE,0BAA0B,CAAC;MACzDX,GAAG,CAAC0B,GAAG,CAACH,IAAI,CAAC;MACf;IACA,CAAC,MAAM,IAAIb,IAAI,KAAK,MAAM,EAAE;MAC1B,IAAIiB,KAAK,GAAG;QAAEC,OAAO,EAAE9B,GAAG,CAAC8B,OAAO;QAAEf,KAAK,EAAEf,GAAG,CAACe;MAAM,CAAC;MACtD,KAAK,IAAIgB,IAAI,IAAI/B,GAAG,EAAE6B,KAAK,CAACE,IAAI,CAAC,GAAG/B,GAAG,CAAC+B,IAAI,CAAC;MAC7C,IAAIC,IAAI,GAAGC,IAAI,CAAC1B,SAAS,CAAC;QAAEsB,KAAK,EAAEA;MAAM,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;MACpD3B,GAAG,CAACW,SAAS,CAAC,cAAc,EAAE,iCAAiC,CAAC;MAChEX,GAAG,CAAC0B,GAAG,CAACI,IAAI,CAAC;MACf;IACA,CAAC,MAAM;MACL9B,GAAG,CAACW,SAAS,CAAC,cAAc,EAAE,2BAA2B,CAAC;MAC1DX,GAAG,CAAC0B,GAAG,CAACtB,GAAG,CAAC;IACd;EACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;;AAEAjB,OAAO,CAACsC,KAAK,GAAG,SAAS;;AAEzB;AACA;AACA;AACA;;AAEA,SAASR,eAAeA,CAAEb,GAAG,EAAE;EAC7B,OAAOxC,UAAU,CAACwC,GAAG,CAAC,CACnBoB,OAAO,CAACxD,mBAAmB,EAAE,SAAS,CAAC,CACvCwD,OAAO,CAACvD,eAAe,EAAE,MAAM,CAAC;AACrC;;AAEA;AACA;AACA;AACA;;AAEA,SAASoC,SAASA,CAAE2B,GAAG,EAAE;EACvB,IAAInB,KAAK,GAAGmB,GAAG,CAACnB,KAAK;EAErB,IAAIA,KAAK,EAAE;IACT,OAAOC,MAAM,CAACD,KAAK,CAAC;EACtB;EAEA,IAAIT,GAAG,GAAGU,MAAM,CAACkB,GAAG,CAAC;EAErB,OAAO5B,GAAG,KAAK5B,QAAQ,CAACuC,IAAI,CAACiB,GAAG,CAAC,GAC7BzD,OAAO,CAACyD,GAAG,CAAC,GACZ5B,GAAG;AACT;;AAEA;AACA;AACA;AACA;;AAEA,SAASP,QAAQA,CAAEC,GAAG,EAAEM,GAAG,EAAE;EAC3B6B,OAAO,CAACN,KAAK,CAACvB,GAAG,IAAIN,GAAG,CAACe,KAAK,CAAC;AACjC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}