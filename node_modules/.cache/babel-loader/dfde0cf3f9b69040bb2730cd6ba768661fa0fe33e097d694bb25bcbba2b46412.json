{"ast":null,"code":"var _jsxFileName = \"/Users/maxympetlyak/Desktop/REDUX/hero_admin_panel_template/src/components/heroesFilters/HeroesFilters.js\",\n  _s = $RefreshSig$();\nimport { useHttp } from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { filtersFetching, filtersFetched, filtersFetchingError, filtersChanged } from './filtersSlice';\nimport Spinner from '../spinner/Spinner';\nimport { fetchFilters } from \"../../actions\";\n\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeroesFilters = () => {\n  _s();\n  const {\n    filters,\n    filtersLoadingStatus,\n    activeFilter\n  } = useSelector(state => state.filters);\n  const dispatch = useDispatch();\n  const {\n    request\n  } = useHttp();\n\n  // Запрос на сервер для получения фильтров и последовательной смены состояния\n  useEffect(() => {\n    dispatch(fetchFilters(request()));\n    // eslint-disable-next-line\n  }, []);\n  if (filtersLoadingStatus === \"loading\") {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  } else if (filtersLoadingStatus === \"error\") {\n    return /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"text-center mt-5\",\n      children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  const renderFilters = arr => {\n    if (arr.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"text-center mt-5\",\n        children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\\u044B \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this);\n    }\n\n    // Данные в json-файле я расширил классами и текстом\n    return arr.map(({\n      name,\n      className,\n      label\n    }) => {\n      // Используем библиотеку classnames и формируем классы динамически\n      const btnClass = classNames('btn', className, {\n        'active': name === activeFilter\n      });\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        id: name,\n        className: btnClass,\n        onClick: () => dispatch(filtersChanged(name)),\n        children: label\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this);\n    });\n  };\n  const elements = renderFilters(filters);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card shadow-lg mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: \"\\u041E\\u0442\\u0444\\u0438\\u043B\\u044C\\u0442\\u0440\\u0443\\u0439\\u0442\\u0435 \\u0433\\u0435\\u0440\\u043E\\u0435\\u0432 \\u043F\\u043E \\u044D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442\\u0430\\u043C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(HeroesFilters, \"RegkP5kRistoy4neBgIvViNJd4Q=\", false, function () {\n  return [useSelector, useDispatch, useHttp];\n});\n_c = HeroesFilters;\nexport default HeroesFilters;\nvar _c;\n$RefreshReg$(_c, \"HeroesFilters\");","map":{"version":3,"names":["useHttp","useEffect","useDispatch","useSelector","classNames","filtersFetching","filtersFetched","filtersFetchingError","filtersChanged","Spinner","fetchFilters","jsxDEV","_jsxDEV","HeroesFilters","_s","filters","filtersLoadingStatus","activeFilter","state","dispatch","request","fileName","_jsxFileName","lineNumber","columnNumber","className","children","renderFilters","arr","length","map","name","label","btnClass","id","onClick","elements","_c","$RefreshReg$"],"sources":["/Users/maxympetlyak/Desktop/REDUX/hero_admin_panel_template/src/components/heroesFilters/HeroesFilters.js"],"sourcesContent":["import {useHttp} from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { filtersFetching, filtersFetched, filtersFetchingError, filtersChanged } from './filtersSlice';\nimport Spinner from '../spinner/Spinner';\nimport {fetchFilters} from \"../../actions\";\n\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n\nconst HeroesFilters = () => {\n\n    const {filters, filtersLoadingStatus, activeFilter} = useSelector(state => state.filters);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    // Запрос на сервер для получения фильтров и последовательной смены состояния\n    useEffect(() => {\n        dispatch(fetchFilters(request()));\n        // eslint-disable-next-line\n    }, []);\n\n    if (filtersLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (filtersLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderFilters = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>\n        }\n\n        // Данные в json-файле я расширил классами и текстом\n        return arr.map(({name, className, label}) => {\n\n            // Используем библиотеку classnames и формируем классы динамически\n            const btnClass = classNames('btn', className, {\n                'active': name === activeFilter\n            });\n\n            return <button\n                key={name}\n                id={name}\n                className={btnClass}\n                onClick={() => dispatch(filtersChanged(name))}\n            >{label}</button>\n        })\n    }\n\n    const elements = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}